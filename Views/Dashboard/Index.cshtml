@using Aetherium.Enums
@using Aetherium.Helpers
@using Aetherium.Models.ViewModels
@using Aetherium.Services
@inject UserService _userService
@model DashboardViewModel
@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
@{
    bool isLoggedIn = _userService.GetUserId() != null;
}

<div class="row vh-100">

    <div class="row">
        <div class="vh-100 col-12" id="dashboardMain">
            <div class="row py-2 mb-2">
                <h4>Welcome back, @Model.CurrentCharacter.DisplayName!</h4>
            </div>
            <div class="row mt-2 justify-content-around">
                <div class="col-md-2 mb-sm-4" id="leftDashboardCol">
                    <div id="characterSwap" class="shadow p-2 mb-3">
                        <div class="dashboard-avatar-wrapper">
                            <img class="dashboard-avatar" src="@Model.CurrentCharacter.AvatarUrl" />
                            @if (isLoggedIn)
                            {
                                <span class="online-dot"></span>
                            }
                        </div>
                        <div class="text-center">
                            <p class="mb-0">@Model.CurrentCharacter.DisplayName</p>
                            <p class="small mb-0 text-muted">Swap Characters</p>
                        </div>
                        <div>
                            <div id="swapArrows">
                                <i class="fa-solid fa-arrows-up-down"></i>
                            </div>
                        </div>
                    </div>
                    
                    <div id="dashboardNav" class="shadow p-2 fullWidth">
                        <ul class="list-unstyled mb-0">
                            <li>
                                <div class="d-flex justify-content-between align-items-center dashNavProfile p-2 pointerCursor">
                                    <div>
                                        <i class="fa-solid fa-user me-2 fixed-icon"></i>
                                        Profile
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="d-flex justify-content-between align-items-center dashNavRequests p-2 pointerCursor">
                                    <div>
                                        <i class="fa-solid fa-users me-2 fixed-icon"></i>
                                        Friends
                                    </div>
                                    <div id="requestCount" class="text-center navCounter">
                                        0
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="d-flex justify-content-between align-items-center dashNavRequests p-2 pointerCursor">
                                    <div>
                                        <i class="fa-solid fa-user-plus me-2 fixed-icon"></i>
                                        Friend Requests
                                    </div>
                                    <div id="requestCount" class="text-center navCounter">
                                        0
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="d-flex justify-content-between align-items-center dashNavRequests p-2 pointerCursor">
                                    <div>
                                        <i class="fa-solid fa-heart me-2 fixed-icon"></i>
                                        Relationships
                                    </div>
                                    <div id="requestCount" class="text-center navCounter">
                                        0
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="d-flex justify-content-between align-items-center dashNavRequests p-2 pointerCursor">
                                    <div>
                                        <i class="fa-solid fa-message me-2 fixed-icon"></i>
                                        Unread Messages
                                    </div>
                                    <div id="requestCount" class="text-center navCounter">
                                        0
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="d-flex justify-content-between align-items-center dashNavRequests p-2 pointerCursor">
                                    <div>
                                        <i class="fa-solid fa-satellite-dish me-2 fixed-icon"></i>
                                        Following
                                    </div>
                                    <div id="requestCount" class="text-center navCounter">
                                        0
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-6 mb-sm-4" id="mainDashboardCol">
                    <div id="statusPostApp" class="shadow p-2" style="border-radius: 8px;">
                        @if (TempData["StatusError"] != null)
                        {
                            var message = TempData["StatusError"].ToString();
                            if (message.Contains("too large"))
                            {
                                <div class="alert alert-danger">
                                    @Html.Raw(message + " <a href='https://ezgif.com/resize' target='_blank'>Click here to resize</a>.")
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-danger">@message</div>
                            }
                        }
                        
                        <form method="post" asp-controller="Dashboard" asp-action="CreateStatus">
                            @Html.AntiForgeryToken()
                            <quill-editor name="PostContent" height="100px" placeholder="What's on your mind?"></quill-editor>
                            <div class="row mb-2 mt-2">
                                <div class="col-6">
                                    <label>Who can see this?</label>
                                    <select name="PrivacyLevel" class="form-select mb-2">
                                        @foreach (var (value, display) in EnumExtensions.GetEnumDisplayValues<PostPrivacyLevelEnum>())
                                        {
                                            <option value="@value">@display</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-6">
                                    <div id="relationshipTypeSelect" style="display:none;">
                                        <label>Select Relationship:</label>
                                        <select name="AllowedRelationshipType" class="form-select mb-2">
                                            @foreach (var (value, display) in EnumExtensions.GetEnumDisplayValues<RelationshipTypeEnum>())
                                            {
                                                <option value="@value">@display</option>
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            
                            <button type="submit" class="btn btn-primary mt-2">Post</button>
                        </form>
                    </div>
                    <div id="timeline" class="mt-2">
                        @foreach (var post in Model.Posts)
                        {
                            <div class="card mb-3">
                                <div class="card-header d-flex align-items-center">
                                    <img src="@post.AvatarUrl" class="rounded-circle me-2" style="width:40px;height:40px;" />
                                    <strong>@post.DisplayName</strong>
                                    <span class="ms-auto text-muted" style="font-size: 0.9em;">@post.CreatedOn.ToLocalTime().ToString("g")</span>
                                </div>
                                <div class="card-body">
                                    @Html.Raw(post.PostContent)
                                </div>
                                <div class="card-footer">
                                    <div class="mb-2">
                                        @post.Comments.Count() comments
                                    </div>
                                    <div>
                                        <form method="post" asp-action="AddComment" asp-controller="Dashboard">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="PostId" value="@post.PostId" />
                                            <quill-editor name="Content" height="50px" placeholder="Write a comment..."></quill-editor>
                                            <button type="submit" class="btn btn-sm btn-primary mt-2">Comment</button>
                                        </form>
                                    </div>
                                    <div class="shadow p-2 mt-2">
                                        @foreach (var comment in post.Comments.OrderBy(c => c.CreatedOn))
                                        {
                                            <div class="card-header d-flex align-items-center" style="background-color: #393E46; color: #eee;">
                                                <img src="@post.AvatarUrl" class="rounded-circle me-2" style="width:30px;height:30px;" />
                                                <strong>@post.DisplayName</strong>
                                            </div>
                                            <div class="mb-2 border-top p-2">
                                                @Html.Raw(comment.Content)
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>

                <div class="col-md-3">

                </div>
            </div>            
        </div>
    </div>
</div>
<script>
    window.onload = function () {
        const privacySelect = document.querySelector('[name="PrivacyLevel"]');
        const relationshipSelect = document.getElementById('relationshipTypeSelect');

        if (privacySelect && relationshipSelect) {
            relationshipSelect.style.display = (privacySelect.value === "3") ? "block" : "none";

            privacySelect.addEventListener('change', function () {
                relationshipSelect.style.display = (this.value === "3") ? "block" : "none";
            });
        }
    };
</script>

@* 
@foreach (var character in Model)
{
    <div class="col-md-4 mb-4">
        <div class="card shadow" style="background-color: #393E46; color: #eee;">
            <img src="@character.AvatarUrl" class="card-img-top" alt="@character.DisplayName" style="height: 200px; object-fit: cover;" />
            <div class="card-body">
                <h5 class="card-title">@character.DisplayName</h5>
                <p class="card-text">Created: @character.CreatedOn.ToShortDateString()</p>
            </div>
        </div>
    </div>
} 
*@